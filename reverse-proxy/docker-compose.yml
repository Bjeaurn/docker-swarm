version: '3.4'
services:
  nginx:
    image: nginx:alpine
    ports:
     - 80:80
     - 443:443
    volumes:
     - /docker/nginx/conf.d:/etc/nginx/conf.d
     - /docker/nginx/vhost.d:/etc/nginx/vhost.d
     - /docker/nginx/html:/usr/share/nginx/html
     - /docker/nginx/certs:/etc/nginx/certs:ro
     - /docker/nginx/htpasswd:/etc/nginx/htpasswd:ro
    deploy:
      replicas: 3
    networks:
     - public
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 4m
  nginx-gen:
    image: jwilder/docker-gen:latest
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl
    # nginx doesn't work in swarm mode, so if you have 1 nginx instance and you put it's docker container Id here, it works. Workaround.
      /etc/nginx/conf.d/default.conf
    volumes:
     - /docker/nginx/conf.d:/etc/nginx/conf.d
     - /docker/nginx/vhost.d:/etc/nginx/vhost.d
     - /docker/nginx/html:/usr/share/nginx/html
     - /docker/nginx/certs:/etc/nginx/certs:ro
     - /docker/nginx/htpasswd:/etc/nginx/htpasswd:ro
     - /var/run/docker.sock:/tmp/docker.sock:ro
     - /docker/nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    networks:
     - public
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 2m
    deploy:
      replicas: 0
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    environment:
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
      NGINX_PROXY_CONTAINER: nginx
    volumes:
     - /docker/nginx/conf.d:/etc/nginx/conf.d
     - /docker/nginx/vhost.d:/etc/nginx/vhost.d
     - /docker/nginx/html:/usr/share/nginx/html
     - /docker/nginx/certs:/etc/nginx/certs
     - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
     - public
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 2m
    deploy:
      replicas: 0
networks:
  public:
    external: true
